{"version":3,"file":"main.5b91305986d905371750.hot-update.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AAzDA","sources":["webpack://production-project/./src/shared/assets/icons/about-20-20.svg","webpack://production-project/./src/shared/assets/icons/main-20-20.svg","webpack://production-project/./src/widgets/Sidebar/ui/Sidebar/Sidebar.tsx"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nvar SvgAbout2020 = function SvgAbout2020(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 14,\n    height: 18,\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.556 6.344v10.434H1.444V1.222h8.212a4.14 4.14 0 0 1 .488-1.11h-8.7a1.111 1.111 0 0 0-1.11 1.11v15.556a1.111 1.111 0 0 0 1.11 1.11h11.111a1.111 1.111 0 0 0 1.112-1.11V6.5a4.162 4.162 0 0 1-1.111-.156Z\"\n  })));\n};\nexport default SvgAbout2020;","var _path;\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nvar SvgMain2020 = function SvgMain2020(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, props), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M.415 9.84 8.939.818 9.51.214A.676.676 0 0 1 10 0c.184 0 .36.077.49.214l9.095 9.625c.134.141.239.309.31.493.072.185.107.383.105.582-.009.822-.655 1.478-1.432 1.478h-.937V20H2.369v-7.608h-.957c-.377 0-.733-.156-1-.439a1.494 1.494 0 0 1-.306-.485A1.562 1.562 0 0 1 0 10.895c0-.397.148-.773.415-1.056Zm8.35 8.478h2.47v-4.765h-2.47v4.765Zm-4.807-7.607v7.607h3.395v-5.325c0-.517.395-.935.882-.935h3.53c.487 0 .882.418.882.935v5.325h3.395v-7.607h2.118L9.998 2.075l-.51.54-7.65 8.096h2.12Z\"\n  })));\n};\nexport default SvgMain2020;","/* eslint-disable i18next/no-literal-string */\nimport { classNames } from 'shared/lib/classNames/classNames';\nimport React, { useState } from 'react';\nimport { ThemeSwitcher } from 'shared/ui/ThemeSwitcher';\nimport { LangSwitcher } from 'shared/ui/LangSwitcher/LangSwitcher';\nimport { useTranslation } from 'react-i18next';\nimport { Button, ButtonSize, ThemeButton } from 'shared/ui/Button/Button';\nimport { AppLink, AppLinkTheme } from 'shared/ui/AppLink/AppLink';\nimport { RoutePath } from 'shared/config/routeConfig/routeConfig';\nimport MainIcon from 'shared/assets/icons/main-20-20.svg';\nimport AboutIcon from 'shared/assets/icons/about-20-20.svg';\nimport cls from './Sidebar.module.scss';\n\ninterface SidebarProps {\n  className?: string;\n}\n\nexport const Sidebar = ({ className }: SidebarProps) => {\n    const [collapsed, setCollapsed] = useState(false);\n    const { t } = useTranslation();\n\n    const onToggle = () => {\n        setCollapsed((prev) => !prev);\n    };\n\n    return (\n        <div\n            data-testid=\"sidebar\"\n            className={classNames(cls.Sidebar, { [cls.collapsed]: collapsed }, [\n                className,\n            ])}\n        >\n            <Button\n                data-testid=\"sidebar-toggle\"\n                type=\"button\"\n                className={cls.collapsedBtn}\n                onClick={onToggle}\n                theme={ThemeButton.BACKGROUND_INVERTED}\n                square\n                size={ButtonSize.XL}\n            >\n                {collapsed ? '>' : '<'}\n            </Button>\n            <div className={cls.items}>\n                <div className={cls.item}>\n                    <MainIcon className={cls.icon} />\n                    <AppLink\n                        theme={AppLinkTheme.SECONDARY}\n                        to={RoutePath.main}\n                        className={cls.link}\n                    >\n                        Главная\n                    </AppLink>\n                </div>\n\n                <div className={cls.item}>\n                    <AboutIcon className={cls.icon} />\n                    <AppLink\n                        theme={AppLinkTheme.SECONDARY}\n                        to={RoutePath.about}\n                        className={cls.link}\n                    >\n                        О сайте\n                    </AppLink>\n                </div>\n\n            </div>\n            <div className={cls.switchers} />\n            <div className={cls.switchers}>\n                <ThemeSwitcher />\n                <LangSwitcher short={collapsed} className={cls.lang} />\n            </div>\n        </div>\n    );\n};\n"],"names":[],"sourceRoot":""}