{"version":3,"file":"main.12973c3cb743fb87bea3.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://production-project/./src/shared/ui/Button/Button.stories.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\nimport { ComponentStory, ComponentMeta, addDecorator } from \\\"@storybook/react\\\";\\n\\nimport { Button, ThemeButton } from \\\"./Button\\\";\\nimport \\\"app/styles/index.scss\\\";\\nimport { ThemeDecorator } from \\\"shared/config/storybook/ThemeDecorator/ThemeDecorator\\\";\\nimport { Theme } from \\\"app/providers/ThemeProvider\\\";\\nexport default {\\n  title: \\\"shared/Button\\\",\\n  component: Button,\\n  argTypes: {\\n    backgroundColor: { control: \\\"color\\\" },\\n  },\\n} as ComponentMeta<typeof Button>;\\n\\nconst Template: ComponentStory<typeof Button> = (args) => <Button {...args} />;\\n\\nexport const Primary = Template.bind({});\\nPrimary.args = {\\n  children: \\\"text\\\",\\n};\\n\\n\\nexport const Clear = Template.bind({});\\nClear.args = {\\n  children: \\\"text\\\",\\n  theme: ThemeButton.CLEAR,\\n};\\n\\n\\n\\nexport const Outline = Template.bind({});\\nOutline.args = {\\n  children: \\\"text\\\",\\n  theme: ThemeButton.OUTLINE,\\n};\\n\\n\\n\\nexport const OutlineDark = Template.bind({});\\nOutlineDark.args = {\\n  children: \\\"text\\\",\\n  theme: ThemeButton.OUTLINE,\\n};\\n\\nOutlineDark.Outline = [ ThemeDecorator(Theme.DARK)]\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":48,\"line\":16},\"endLoc\":{\"col\":78,\"line\":16},\"startBody\":{\"col\":48,\"line\":16},\"endBody\":{\"col\":78,\"line\":16}},\"Clear\":{\"startLoc\":{\"col\":48,\"line\":16},\"endLoc\":{\"col\":78,\"line\":16},\"startBody\":{\"col\":48,\"line\":16},\"endBody\":{\"col\":78,\"line\":16}},\"Outline\":{\"startLoc\":{\"col\":48,\"line\":16},\"endLoc\":{\"col\":78,\"line\":16},\"startBody\":{\"col\":48,\"line\":16},\"endBody\":{\"col\":78,\"line\":16}},\"OutlineDark\":{\"startLoc\":{\"col\":48,\"line\":16},\"endLoc\":{\"col\":78,\"line\":16},\"startBody\":{\"col\":48,\"line\":16},\"endBody\":{\"col\":78,\"line\":16}}};\n    \nimport React from \"react\";\nimport { ComponentStory, ComponentMeta, addDecorator } from \"@storybook/react\";\n\nimport { Button, ThemeButton } from \"./Button\";\nimport \"app/styles/index.scss\";\nimport { ThemeDecorator } from \"shared/config/storybook/ThemeDecorator/ThemeDecorator\";\nimport { Theme } from \"app/providers/ThemeProvider\";\nexport default {\n  title: \"shared/Button\",\n  component: Button,\n  argTypes: {\n    backgroundColor: { control: \"color\" },\n  },\n} as ComponentMeta<typeof Button>;\n\nconst Template: ComponentStory<typeof Button> = (args) => <Button {...args} />;\n\nexport const Primary = Template.bind({});;\nPrimary.args = {\n  children: \"text\",\n};\n\n\nexport const Clear = Template.bind({});;\nClear.args = {\n  children: \"text\",\n  theme: ThemeButton.CLEAR,\n};\n\n\n\nexport const Outline = Template.bind({});;\nOutline.args = {\n  children: \"text\",\n  theme: ThemeButton.OUTLINE,\n};\n\n\n\nexport const OutlineDark = Template.bind({});\nOutlineDark.args = {\n  children: \"text\",\n  theme: ThemeButton.OUTLINE,\n};\n\nOutlineDark.Outline = [ ThemeDecorator(Theme.DARK)]\n\n\n\n\nPrimary.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Primary.parameters };\nClear.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Clear.parameters };\nOutline.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...Outline.parameters };\nOutlineDark.parameters = { storySource: { source: \"(args) => <Button {...args} />\" }, ...OutlineDark.parameters };"],"names":[],"sourceRoot":""}