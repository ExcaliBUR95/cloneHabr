{"version":3,"file":"main.4bbdc6344f577d99719e.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;AClCA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAIA;AAjBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AAEA;AAAA;AAAA;AAYA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAlBA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAqBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAEA;AAGA;AATA;AAWA","sources":["webpack://production-project/./src/pages/MainPage/ui/MainPage.stories.tsx","webpack://production-project/./src/app/providers/ErrorBoundary/index.ts","webpack://production-project/./src/app/providers/ErrorBoundary/ui/BugButton.tsx","webpack://production-project/./src/app/providers/ErrorBoundary/ui/ErrorBoundary.tsx","webpack://production-project/./src/pages/MainPage/ui/MainPage.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\\nimport { Theme } from 'app/providers/ThemeProvider';\\nimport MainPage from './MainPage';\\n\\nexport default {\\n    title: 'pages/MainPage',\\n    component: MainPage,\\n    argTypes: {\\n        backgroundColor: { control: 'color' },\\n    },\\n} as ComponentMeta<typeof MainPage>;\\n\\nconst Template: ComponentStory<typeof MainPage> = (args) => <MainPage {...args} />;\\n\\nexport const Normal = Template.bind({});\\nNormal.args = {};\\n\\nexport const Dark = Template.bind({});\\nDark.args = {};\\nDark.decorators = [ThemeDecorator(Theme.DARK)];\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Normal\":{\"startLoc\":{\"col\":50,\"line\":15},\"endLoc\":{\"col\":82,\"line\":15},\"startBody\":{\"col\":50,\"line\":15},\"endBody\":{\"col\":82,\"line\":15}},\"Dark\":{\"startLoc\":{\"col\":50,\"line\":15},\"endLoc\":{\"col\":82,\"line\":15},\"startBody\":{\"col\":50,\"line\":15},\"endBody\":{\"col\":82,\"line\":15}}};\n    \nimport React from 'react';\nimport { ComponentMeta, ComponentStory } from '@storybook/react';\nimport { ThemeDecorator } from 'shared/config/storybook/ThemeDecorator/ThemeDecorator';\nimport { Theme } from 'app/providers/ThemeProvider';\nimport MainPage from './MainPage';\n\nexport default {\n    title: 'pages/MainPage',\n    component: MainPage,\n    argTypes: {\n        backgroundColor: { control: 'color' },\n    },\n} as ComponentMeta<typeof MainPage>;\n\nconst Template: ComponentStory<typeof MainPage> = (args) => <MainPage {...args} />;\n\nexport const Normal = Template.bind({});;\nNormal.args = {};\n\nexport const Dark = Template.bind({});\nDark.args = {};\nDark.decorators = [ThemeDecorator(Theme.DARK)];\n\n\n\nNormal.parameters = { storySource: { source: \"(args) => <MainPage {...args} />\" }, ...Normal.parameters };\nDark.parameters = { storySource: { source: \"(args) => <MainPage {...args} />\" }, ...Dark.parameters };","import ErrorBoundary from \"./ui/ErrorBoundary\";\nimport { BugButton } from \"./ui/BugButton\";\nexport {\n    ErrorBoundary,\n    BugButton\n}","import { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button } from 'shared/ui/Button/Button';\n\ninterface BugButtonProps {\n  className?: string;\n}\n// Компонент для тестирования error boundary\nexport const BugButton = () => {\n    const [error, setError] = useState(false)\n    const {t} = useTranslation()\n    const throwError = () => setError(!error)\n\n    useEffect(() => {\n        if(error){\n            throw new Error\n        }\n    }, [error])\n\n    return(\n        <Button onClick={throwError} >\n            {t('throw error')}\n        </Button>\n    )\n  \n}\n\n\n ","import React, { ErrorInfo, ReactNode, Suspense } from \"react\";\nimport { withTranslation } from \"react-i18next\";\nimport { ErrorPage } from \"widgets/ErrorPage/ui/ErrorPage\";\n\ninterface ErrorBoundaryProps {\n    children: ReactNode;\n}\n\ninterface ErrorBoundaryState {\n    hasError: boolean\n}\n\n\n\nclass ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    constructor(props: ErrorBoundaryProps) {\n      super(props);\n      this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error: Error) {\n      // Update state so the next render will show the fallback UI.\n      return { hasError: true };\n    }\n  \n    componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n      // You can also log the error to an error reporting service\n      console.log((errorInfo));\n    }\n  \n    render() {\n        const {hasError} = this.state;\n        const {children} = this.props;\n      if (hasError ) {\n        // You can render any custom fallback UI\n        return <Suspense fallback=''><ErrorPage /></Suspense>;\n      }\n  \n      return this.props.children; \n    }\n  }\n\n\n\n  export default ErrorBoundary;","import { BugButton } from 'app/providers/ErrorBoundary';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst MainPage = () => {\n    const { t } = useTranslation();\n\n    return (\n        <div>\n            <BugButton />\n            {t('Главная страница')}\n        </div>\n    );\n};\n\nexport default MainPage;\n"],"names":[],"sourceRoot":""}