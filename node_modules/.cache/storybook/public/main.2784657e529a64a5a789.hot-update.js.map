{"version":3,"file":"main.2784657e529a64a5a789.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AAAA;AAGA;AAIA;AAJA;AAAA;AAAA;AAAA;AAMA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AA7CA","sources":["webpack://production-project/./src/pages/AboutPage/ui/AboutPage.async.tsx","webpack://production-project/./src/pages/MainPage/ui/MainPage.async.tsx","webpack://production-project/./src/pages/NotFoundPage/index.ts","webpack://production-project/./src/shared/config/routeConfig/routeConfig.tsx","webpack://production-project/./src/widgets/Sidebar/ui/Sidebar/Sidebar.tsx"],"sourcesContent":["import { lazy } from 'react';\n\nexport const AboutPageAsync = lazy(\n    () => new Promise((resolve) => {\n        setTimeout(() => {\n            // @ts-ignore\n            resolve(import('./AboutPage'));\n        }, 1500);\n    }),\n);\n// export const AboutPageAsync = lazy(() => import(\"./AboutPage\"))\n","import { lazy } from 'react';\n\nexport const MainPageAsync = lazy(\n    () => new Promise((resolve) => {\n        // @ts-ignore\n        setTimeout(() => resolve(import('./MainPage')));\n    }),\n);\n// Так в реальных проектах делать не стоит, все это делается, потому что локально подргужается\n// если вдруг будут ошибки, ts-igonre к вашим услугам\n","import {NotFoundPage} from './ui/NotFoundPage'\n\nexport {\n    NotFoundPage\n}","import { AboutPage } from 'pages/AboutPage';\nimport { MainPage } from 'pages/MainPage';\nimport { NotFoundPage } from 'pages/NotFoundPage';\nimport { RouteProps } from 'react-router-dom';\n\nexport enum AppRoutes {\n  MAIN = 'main',\n  ABOUT = 'about',\n  NOT_FOUND = 'not_found'\n}\n\nexport const RoutePath: Record<AppRoutes, string> = {\n    [AppRoutes.MAIN]: '/',\n    [AppRoutes.ABOUT]: '/about',\n    [AppRoutes.NOT_FOUND]: '*'\n};\n\nexport const routeConfig: Record<AppRoutes, RouteProps> = {\n    [AppRoutes.MAIN]: {\n        path: RoutePath.main,\n        element: <MainPage />,\n    },\n    [AppRoutes.ABOUT]: {\n        path: RoutePath.about,\n        element: <AboutPage />,\n    },\n    [AppRoutes.NOT_FOUND]: {\n        path: RoutePath.not_found,\n        element: <NotFoundPage />\n    }\n};\n","/* eslint-disable i18next/no-literal-string */\nimport { classNames } from 'shared/lib/classNames/classNames';\nimport React, { useState } from 'react';\nimport { ThemeSwitcher } from 'shared/ui/ThemeSwitcher';\nimport { LangSwitcher } from 'shared/ui/LangSwitcher/LangSwitcher';\nimport { useTranslation } from 'react-i18next';\nimport { Button, ButtonSize, ThemeButton } from 'shared/ui/Button/Button';\nimport { AppLink, AppLinkTheme } from 'shared/ui/AppLink/AppLink';\nimport { RoutePath } from 'shared/config/routeConfig/routeConfig';\nimport cls from './Sidebar.module.scss';\n\ninterface SidebarProps {\n  className?: string;\n}\n\nexport const Sidebar = ({ className }: SidebarProps) => {\n    const [collapsed, setCollapsed] = useState(false);\n    const { t } = useTranslation();\n\n    const onToggle = () => {\n        setCollapsed((prev) => !prev);\n    };\n\n    return (\n        <div\n            data-testid=\"sidebar\"\n            className={classNames(cls.Sidebar, { [cls.collapsed]: collapsed }, [\n                className,\n            ])}\n        >\n            <Button\n                data-testid=\"sidebar-toggle\"\n                type=\"button\"\n                className={cls.collapsedBtn}\n                onClick={onToggle}\n                theme={ThemeButton.BACKGROUND_INVERTED}\n                square\n                size={ButtonSize.XL}\n            >\n                {collapsed ? '>' : '<'}\n            </Button>\n            <div className={cls.items}>\n                <AppLink\n                    theme={AppLinkTheme.SECONDARY}\n                    to={RoutePath.main}\n                    className={cls.mainLink}\n                >\n                    Главная\n                </AppLink>\n                <AppLink theme={AppLinkTheme.RED} to={RoutePath.about}>\n                    О сайте\n                </AppLink>\n            </div>\n            <div className={cls.switchers} />\n            <div className={cls.switchers}>\n                <ThemeSwitcher />\n                <LangSwitcher short={collapsed} className={cls.lang} />\n            </div>\n        </div>\n    );\n};\n"],"names":[],"sourceRoot":""}