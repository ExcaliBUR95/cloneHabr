{"version":3,"names":["React","makeClass","useTheme","ObjectValue","styles","buildPreview","children","previewMax","showKey","previews","i","length","child","isPrototype","push","key","pop","getArrayLabel","ast","open","theme","l","value","getObjectLabel","getPromiseLabel","String","getMapLabel","size","getSetLabel","ObjectLabel","props","colorScheme","className","html","themeClass","currentTheme","classes","objectLabel","prototype","isRoot","depth","Key","type","functionDecorator","function","name","defaultProps"],"sources":["ObjectLabel.tsx"],"sourcesContent":["import React from \"react\";\nimport makeClass from \"clsx\";\nimport { ThemeableElement, useTheme, Theme } from \"@devtools-ds/themes\";\nimport {\n  ResolvedASTNode,\n  ResolvedASTArray,\n  ResolvedASTObject,\n  ResolvedASTSet,\n  ResolvedASTPromise,\n  ResolvedASTMap,\n  ASTNode,\n} from \"@devtools-ds/object-parser\";\nimport ObjectValue from \"./ObjectValue\";\nimport styles from \"./ObjectInspector.css\";\n\ninterface ObjectLabelProps extends ThemeableElement<\"span\"> {\n  /** Type of object. */\n  ast: ResolvedASTNode;\n  /** How many previews to render */\n  previewMax: number;\n  /** Whether the Object label is open */\n  open: boolean;\n}\n\n/** Build a list of previews */\nconst buildPreview = (\n  children: ASTNode[],\n  previewMax: number,\n  showKey: boolean\n) => {\n  const previews = [];\n  for (let i = 0; i < children.length; i++) {\n    const child = children[i];\n\n    if (!child.isPrototype) {\n      previews.push(\n        <ObjectValue key={child.key} ast={child} showKey={showKey} />\n      );\n\n      if (i < children.length - 1) {\n        previews.push(\", \");\n      } else {\n        previews.push(\" \");\n      }\n    }\n\n    if (child.isPrototype && i === children.length - 1) {\n      previews.pop();\n      previews.push(\" \");\n    }\n\n    // Add ellipsis if needed\n    if (i === previewMax - 1 && children.length > previewMax) {\n      previews.push(\"… \");\n      break;\n    }\n  }\n\n  return previews;\n};\n\n/** Get the label for an array */\nconst getArrayLabel = (\n  ast: ResolvedASTArray,\n  open: boolean,\n  previewMax: number,\n  theme: Theme\n) => {\n  const l = ast.value.length;\n\n  if (open) {\n    return <span>Array({l})</span>;\n  }\n\n  return (\n    <>\n      <span>{`${theme === \"firefox\" ? \"Array\" : \"\"}(${l}) [ `}</span>\n      {buildPreview(ast.children, previewMax, false)}\n      <span>]</span>\n    </>\n  );\n};\n\n/** Get the label for an object */\nconst getObjectLabel = (\n  ast: ResolvedASTObject,\n  open: boolean,\n  previewMax: number,\n  theme: Theme\n) => {\n  if (ast.isPrototype) {\n    return <span>{`Object ${theme === \"firefox\" ? \"{ … }\" : \"\"}`}</span>;\n  }\n\n  if (open) {\n    return <span>{\"{…}\"}</span>;\n  }\n\n  return (\n    <>\n      <span>{`${theme === \"firefox\" ? \"Object \" : \"\"}{ `}</span>\n      {buildPreview(ast.children, previewMax, true)}\n      <span>{\"}\"}</span>\n    </>\n  );\n};\n\n/** Get the label for a Promise */\nconst getPromiseLabel = (\n  ast: ResolvedASTPromise,\n  open: boolean,\n  previewMax: number\n) => {\n  if (open) {\n    return <span>{`Promise { \"${String(ast.children[0].value)}\" }`}</span>;\n  }\n\n  return (\n    <>\n      <span>{`Promise { `}</span>\n      {buildPreview(ast.children, previewMax, true)}\n      <span>{\"}\"}</span>\n    </>\n  );\n};\n\n/** Get the label for a Map */\nconst getMapLabel = (\n  ast: ResolvedASTMap,\n  open: boolean,\n  previewMax: number,\n  theme: Theme\n) => {\n  const { size } = ast.value;\n  if (open) {\n    return <span>{`Map(${size})`}</span>;\n  }\n\n  return (\n    <>\n      <span>{`Map${theme === \"chrome\" ? `(${size})` : \"\"} { `}</span>\n      {buildPreview(ast.children, previewMax, true)}\n      <span>{\"}\"}</span>\n    </>\n  );\n};\n\n/** Get the label for a Set */\nconst getSetLabel = (\n  ast: ResolvedASTSet,\n  open: boolean,\n  previewMax: number\n) => {\n  const { size } = ast.value;\n  if (open) {\n    return <span>Set({size})</span>;\n  }\n\n  return (\n    <>\n      <span>{`Set(${ast.value.size}) {`}</span>\n      {buildPreview(ast.children, previewMax, true)}\n      <span>{\"}\"}</span>\n    </>\n  );\n};\n\n/** Create a styled label for an object, with previews of the object contents. */\nexport const ObjectLabel = (props: ObjectLabelProps) => {\n  const {\n    ast,\n    theme,\n    previewMax,\n    open,\n    colorScheme,\n    className,\n    ...html\n  } = props;\n  const { themeClass, currentTheme } = useTheme({ theme, colorScheme }, styles);\n  const isPrototype = ast.isPrototype || false;\n  const classes = makeClass(styles.objectLabel, themeClass, className, {\n    [styles.prototype]: isPrototype,\n  });\n\n  const isRoot = ast.depth <= 0;\n\n  /** The key for the node */\n  const Key = () => {\n    return (\n      <span className={isPrototype ? styles.prototype : styles.key}>\n        {isRoot ? \"\" : `${ast.key}: `}\n      </span>\n    );\n  };\n\n  if (ast.type === \"array\") {\n    return (\n      <span className={classes} {...html}>\n        <Key />\n        {getArrayLabel(ast, open, previewMax, currentTheme)}\n      </span>\n    );\n  }\n\n  if (ast.type === \"function\") {\n    return (\n      <span className={classes} {...html}>\n        <Key />\n        {currentTheme === \"chrome\" && (\n          <span className={styles.functionDecorator}>{\"ƒ \"}</span>\n        )}\n        <span\n          className={makeClass({ [styles.function]: !isPrototype })}\n        >{`${ast.value.name}()`}</span>\n      </span>\n    );\n  }\n\n  if (ast.type === \"promise\") {\n    return (\n      <span className={classes} {...html}>\n        <Key />\n        {getPromiseLabel(ast, open, previewMax)}\n      </span>\n    );\n  }\n\n  if (ast.type === \"map\") {\n    return (\n      <span className={classes} {...html}>\n        <Key />\n        {getMapLabel(ast, open, previewMax, currentTheme)}\n      </span>\n    );\n  }\n\n  if (ast.type === \"set\") {\n    return (\n      <span className={classes} {...html}>\n        <Key />\n        {getSetLabel(ast, open, previewMax)}\n      </span>\n    );\n  }\n\n  return (\n    <span className={classes} {...html}>\n      <Key />\n      {getObjectLabel(ast, open, previewMax, currentTheme)}\n    </span>\n  );\n};\n\nObjectLabel.defaultProps = {\n  previewMax: 8,\n  open: false,\n};\n\nexport default ObjectLabel;\n"],"mappings":"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"}
