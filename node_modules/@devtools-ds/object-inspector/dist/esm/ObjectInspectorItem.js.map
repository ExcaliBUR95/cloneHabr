{"version":3,"names":["React","useEffect","useState","Tree","ObjectValue","ObjectLabel","ObjectInspectorItem","props","ast","expandLevel","depth","resolved","setResolved","open","setOpen","Boolean","resolve","type","promises","children","map","f","Promise","all","r","onSelect","value","child","key","defaultProps"],"sources":["ObjectInspectorItem.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Tree } from \"@devtools-ds/tree\";\nimport { ResolvedASTNode, ASTNode } from \"@devtools-ds/object-parser\";\nimport ObjectValue from \"./ObjectValue\";\nimport ObjectLabel from \"./ObjectLabel\";\n\ninterface ObjectInspectorItemProps {\n  /** JSON ast to render in the tree. */\n  ast: ASTNode;\n  /** The current depth. */\n  depth: number;\n  /** Depth of the tree that is open at first render. */\n  expandLevel: number;\n  /** Callback when a particular node in the tree is actively selected */\n  onSelect?: (node?: ASTNode | ResolvedASTNode) => void;\n}\n\n/** A simple component. */\nexport const ObjectInspectorItem = (props: ObjectInspectorItemProps) => {\n  const { ast, expandLevel, depth } = props;\n\n  const [resolved, setResolved] = useState<ResolvedASTNode | undefined>();\n  const [open, setOpen] = useState(Boolean(depth < expandLevel));\n\n  /** Handle async children */\n  useEffect(() => {\n    /** Async function to resolve children */\n    const resolve = async () => {\n      if (ast.type !== \"value\") {\n        const promises = ast.children.map((f) => f());\n        const children = await Promise.all(promises);\n        const r = {\n          ...ast,\n          children,\n        };\n        setResolved(r);\n      }\n    };\n\n    resolve();\n  }, [ast]);\n\n  if (resolved) {\n    return (\n      <Tree\n        hover={false}\n        open={open}\n        label={<ObjectLabel open={open} ast={resolved} />}\n        onSelect={() => {\n          props.onSelect?.(ast);\n        }}\n        onUpdate={(value: boolean) => {\n          setOpen(value);\n        }}\n      >\n        {resolved.children.map((child) => {\n          return (\n            <ObjectInspectorItem\n              key={child.key}\n              ast={child}\n              depth={depth + 1}\n              expandLevel={expandLevel}\n              onSelect={props.onSelect}\n            />\n          );\n        })}\n      </Tree>\n    );\n  }\n\n  return (\n    <Tree\n      hover={false}\n      label={<ObjectValue ast={ast} />}\n      onSelect={() => {\n        props.onSelect?.(ast);\n      }}\n    />\n  );\n};\n\nObjectInspectorItem.defaultProps = {\n  expandLevel: 0,\n  depth: 0,\n};\n\nexport default ObjectInspectorItem;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,mBAAmB;AAExC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAavC;AACA,OAAO,MAAMC,mBAAmB,GAAIC,KAA+B,IAAK;EACtE,MAAM;IAAEC,GAAG;IAAEC,WAAW;IAAEC;EAAM,CAAC,GAAGH,KAAK;EAEzC,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,EAA+B;EACvE,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAACa,OAAO,CAACL,KAAK,GAAGD,WAAW,CAAC,CAAC;;EAE9D;EACAR,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,OAAO,GAAG,YAAY;MAC1B,IAAIR,GAAG,CAACS,IAAI,KAAK,OAAO,EAAE;QACxB,MAAMC,QAAQ,GAAGV,GAAG,CAACW,QAAQ,CAACC,GAAG,CAAEC,CAAC,IAAKA,CAAC,EAAE,CAAC;QAC7C,MAAMF,QAAQ,GAAG,MAAMG,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;QAC5C,MAAMM,CAAC,mCACFhB,GAAG;UACNW;QAAQ,EACT;QACDP,WAAW,CAACY,CAAC,CAAC;MAChB;IACF,CAAC;IAEDR,OAAO,EAAE;EACX,CAAC,EAAE,CAACR,GAAG,CAAC,CAAC;EAET,IAAIG,QAAQ,EAAE;IACZ,oBACE,oBAAC,IAAI;MACH,KAAK,EAAE,KAAM;MACb,IAAI,EAAEE,IAAK;MACX,KAAK,eAAE,oBAAC,WAAW;QAAC,IAAI,EAAEA,IAAK;QAAC,GAAG,EAAEF;MAAS,EAAI;MAClD,QAAQ,EAAE,MAAM;QAAA;QACd,mBAAAJ,KAAK,CAACkB,QAAQ,oDAAd,qBAAAlB,KAAK,EAAYC,GAAG,CAAC;MACvB,CAAE;MACF,QAAQ,EAAGkB,KAAc,IAAK;QAC5BZ,OAAO,CAACY,KAAK,CAAC;MAChB;IAAE,GAEDf,QAAQ,CAACQ,QAAQ,CAACC,GAAG,CAAEO,KAAK,IAAK;MAChC,oBACE,oBAAC,mBAAmB;QAClB,GAAG,EAAEA,KAAK,CAACC,GAAI;QACf,GAAG,EAAED,KAAM;QACX,KAAK,EAAEjB,KAAK,GAAG,CAAE;QACjB,WAAW,EAAED,WAAY;QACzB,QAAQ,EAAEF,KAAK,CAACkB;MAAS,EACzB;IAEN,CAAC,CAAC,CACG;EAEX;EAEA,oBACE,oBAAC,IAAI;IACH,KAAK,EAAE,KAAM;IACb,KAAK,eAAE,oBAAC,WAAW;MAAC,GAAG,EAAEjB;IAAI,EAAI;IACjC,QAAQ,EAAE,MAAM;MAAA;MACd,oBAAAD,KAAK,CAACkB,QAAQ,qDAAd,sBAAAlB,KAAK,EAAYC,GAAG,CAAC;IACvB;EAAE,EACF;AAEN,CAAC;AAEDF,mBAAmB,CAACuB,YAAY,GAAG;EACjCpB,WAAW,EAAE,CAAC;EACdC,KAAK,EAAE;AACT,CAAC;AAED,eAAeJ,mBAAmB"}
